# ===== ÉTAPE 1: Construction =====
FROM node:18-alpine AS builder

# Définir le répertoire de travail
WORKDIR /app

# Copier les fichiers de configuration du package
COPY package*.json ./

# Installer les dépendances
RUN npm ci --only=production && npm cache clean --force

# Copier le code source
COPY . .

# Construire l'application React pour la production
RUN npm run build

# ===== ÉTAPE 2: Production avec Nginx =====
FROM nginx:alpine AS production

# Installer curl pour les health checks
RUN apk add --no-cache curl

# Supprimer la configuration par défaut de Nginx
RUN rm /etc/nginx/conf.d/default.conf

# Copier la configuration personnalisée de Nginx
COPY nginx.conf /etc/nginx/nginx.conf

# Copier les fichiers construits depuis l'étape de construction
COPY --from=builder /app/dist /usr/share/nginx/html

# Exposer les ports HTTP et HTTPS
EXPOSE 80 443

# Variables d'environnement par défaut
ENV NGINX_ENVSUBST_TEMPLATE_SUFFIX=.template
ENV NGINX_ENVSUBST_OUTPUT_DIR=/etc/nginx/conf.d

# Créer le répertoire des logs
RUN mkdir -p /var/log/nginx

# Commande de santé pour Docker
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
  CMD curl -f http://localhost/health || exit 1

# Commande de démarrage de Nginx
CMD ["nginx", "-g", "daemon off;"]